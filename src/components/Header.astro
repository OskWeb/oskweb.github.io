---
import  { LanguageSelector }  from "./LanguageSelector";
import { SwitchDayNight } from "./SwitchDayNight";
import { getRelativeLocaleUrl } from "astro:i18n";
import { ButtonBurguer } from "./ButtonBurguer";
import { Logo } from "./Logo";
import { getCollection } from "astro:content";

const languages = {
  en: "English",
  es: "Spanish",
  fr: "French",
  de: "German",
  nl: "Dutch",
};

const { lang } = Astro.params;

let currentUrl = Astro.url.pathname.replace(/https?:\/\/[^/]+/, "")  // Elimina el dominio
                      .replace(/^\/[^/]+\//, "/")  // Elimina el idioma
                      .replace(/\/$/, "") || "/";  // Elimina barra final si existe

if(!currentUrl) {
    currentUrl = "/about";
}

console.log("url: " + currentUrl);

const about = getRelativeLocaleUrl(lang || 'en', 'about');

const header = await getCollection("header");

const currentPage = header.find((p) => p.data.lang === lang);

if(!currentPage) {
	throw new Error(`Page not found for ${lang}/about`)
}

const { data } = currentPage;

---

<script>

    const switchState = JSON.parse(localStorage.getItem("theme") || "false");

    if(switchState) {
        document.body.classList.add('light-theme');
    } else {
        document.body.classList.remove('light-theme');
    }

    window.addEventListener("toggle-menu", (event) => {
        const customEvent = event as CustomEvent<boolean>;
        const header = document.querySelector("header");
       
        if (header) {
            if(customEvent.detail) {
                header.classList.remove("menu-open");
            } else {
                header.classList.add("menu-open");
            }
        }
        
    })
</script>

<header class="header">
    
    <div class="contentBox">
        <Logo client:load url={about}/>
        <div class="navbar">
            <nav>
                <ul>
                    <li>
                        <a href={getRelativeLocaleUrl(lang || 'en', 'about')} class={currentUrl == '/about' ? 'line-extended' : 'line-closed'}>{data.nav_link_1}</a>
                    </li>
                    <li>
                        <a href={getRelativeLocaleUrl(lang || 'en', 'projects')} class={currentUrl == '/projects' ? 'line-extended' : 'line-closed'}>{data.nav_link_2}</a>
                    </li>
                    <li>
                        <a href={getRelativeLocaleUrl(lang || 'en', 'education')} class={currentUrl == '/education' ? 'line-extended' : 'line-closed'}>{data.nav_link_3}</a>
                    </li>
                    <li>
                        <a href={getRelativeLocaleUrl(lang || 'en', 'contact')} class={currentUrl == '/contact' ? 'line-extended' : 'line-closed'}>{data.nav_link_4}</a>
                    </li>
                </ul>
            </nav>
            <SwitchDayNight client:visible />
            <LanguageSelector client:load languages={languages}, currentUrl={currentUrl}, initialLang={lang} />
        </div>
        <ButtonBurguer client:load /> 
    </div>
    
</header>

<style>
    .header {
        position: relative;
    }
    .header .contentBox {
        display: flex;
        justify-content: space-between;
        align-items: center;
        height: 150px;
        margin: 0px 50px 0px 50px;
    }
    
    .header .navbar {
        display: flex;
        gap: 35px;
    }
    .header .navbar nav ul {
        display: flex;
        list-style: none;
        gap: 35px;
    }
    .header .navbar nav ul li a {
        color: #848484;
        text-decoration: none;
        font-size: 16px;
    }
    .switchDayNight-box {
        background-color: brown;
    }
    .header .navbar nav ul li {
        position: relative;
    }
    .line-extended {
        position: relative;
    }
    .line-extended::after {
        position: absolute;
        display: block;
        content: '';
        bottom: -10px;
        left: 0;
        width: 30px;
        height: 3px;
        background-color: var(--navbar-hover-color);
    }
    .line-closed {
        position: relative;
    }
    .line-closed::after {
        position: absolute;
        display: block;
        content: '';
        bottom: -10px;
        left: 0;
        width: 5px;
        height: 3px;
        background-color: var(--navbar-hover-color);
        transition: all 300ms ease;
    }
    .line-closed:hover::after {
        width: 30px;
    }

    @media (max-width: 1160px) {
        .header .navbar {
            display: none;
        }
        .menu-burguer {
            display: block;
            background: none;
            border: none;
        }

        /**menu open phone ------------- */
        .menu-open {
            height: 100vh;
        }
        .menu-open .contentBox {
            height: 100vh;
            padding-top: 65px;
            flex-direction: column;
            justify-content: start;
            align-items: end;
            flex-flow: column-reverse;
        }
        .menu-open .contentBox .navbar {
            display: flex;
            margin-top: 68px;
            flex-direction: column;
            align-self: center;
            gap: 68px;
        }
        .menu-open .contentBox .navbar nav ul {
            gap: 68px;
            text-align: center;
        }

        .menu-open .contentBox .navbar nav ul li a{
            font-size: 25px;
        }
        
        
        .menu-open .navbar {
            display: block;
        }
        .menu-open .navbar nav ul{
            flex-direction: column;
        }
        
    }

</style>